%clear all;

% Get Physionet data for one of the subjects
%[data,FS] = processPhysionetData(1);

% 1-D wavelet decomposition to different subbands of EEG
levels = 4;

for c = 2:4 % 3 channels to subband decode
    [C,L] = wavedec(data(:,c),levels,'coif5'); %or db4
    % Ectension mode used for reducing border effects
    ST = dwtmode('status')
    index = 1;
    
    % Show decomposition of signal
    % signal = d1 + d2 + d3 + ... + dn + an

    iterations = levels+1;
    for p = 1:(iterations)
        if(p == iterations) % Type = 'a' (approximation)
            N = levels;
            type = 'a';
            fRangeStr = sprintf('Frequency range: %u - %g Hz',0,(FS/2)/(2^(p-1)));
        else % Type = 'd' (detail)
            N = p;
            type = 'd';
            fRangeStr = sprintf('Frequency range: %g - %g Hz',(FS/2)/(2^p),(FS/2)/(2^(p-1)));
        end;
        subplot(iterations,1,iterations-p+1);
        X = wrcoef(type,C,L,'coif5',N);
        plot(X);
        title(fRangeStr);
    end
end

                % EEGMotor = load('-mat', 'Subject1_1D');

                % % Create new variables in the base workspace from those fields.
                % vars = fieldnames(EEGMotor);
                % for i = 1:length(vars)
                %     assignin('base', vars{i}, EEGMotor.(vars{i}));
                % end

                % EEGData.left = resample(EEGMotor.left(1:19,:)',64,125); % Resample by 64/125 (500 Hz to 256 Hz for Wavelet transform)

                % % % MATLAB Code
                % % % Generated by MATLAB(R) 8.3 and the Signal Processing Toolbox 6.21.
                % % % Generated on: 02-Apr-2014 19:42:14
                % % 
                % % % Butterworth Bandpass filter designed using FDESIGN.BANDPASS.
                % % 
                % % % All frequency values are in Hz.
                % % Fs = 500;  % Sampling Frequency
                % % 
                % % Fstop1 = 0.01;       % First Stopband Frequency
                % % Fpass1 = 0.5;        % First Passband Frequency
                % % Fpass2 = 35;         % Second Passband Frequency
                % % Fstop2 = 40;         % Second Stopband Frequency
                % % Astop1 = 60;          % First Stopband Attenuation (dB)
                % % Apass  = 1;           % Passband Ripple (dB)
                % % Astop2 = 80;          % Second Stopband Attenuation (dB)
                % % match  = 'stopband';  % Band to match exactly
                % % 
                % % % Construct an FDESIGN object and call its BUTTER method.
                % % h  = fdesign.bandpass(Fstop1, Fpass1, Fpass2, Fstop2, Astop1, Apass, ...
                % %                       Astop2, Fs);
                % %                   
                % % Hd = design(h, 'butter', ...
                % %         'MatchExactly', 'stopband', ...
                % %         'SystemObject', true);
                % % % figure(1);
                % % % fvtool(Hd);
                % %     
                % % Hd = dsp.BiquadFilter( ...
                % %         'Structure', 'Direct form II', ...
                % %         'SOSMatrix',Hd.SOSMatrix,'ScaleValues',Hd.ScaleValues)
                % %     
                % % % figure(2);
                % % % fvtool(Hd);
                % 
                % figure(3);
                % hold on;
                % plot([0:1/Fs:(length(EEGMotor.left(1,:))-1)/Fs],EEGMotor.left(1,:),'Color',[1 0 0]);
                % y = step(Hd,EEGMotor.left(1,:)');
                % plot([0:1/Fs:(length(EEGMotor.left(1,:))-1)/Fs],y,'Color',[0 1 0]);


