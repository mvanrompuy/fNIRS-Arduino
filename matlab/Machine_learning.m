function var = Machine_learning(data,tasks)
% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL
% Created Mon Mar 10 14:01:26 CET 2014
%
% This script assumes these variables are defined:
%
%   downsampledData - input data.
%   downsampledData1 - target data.

%Open pool of workers -> multi-core
matlabpool OPEN %Standard amount of workers = amount of cores.

% Set random seed generator to fixed value to always have the same network
%rand('seed',pi);

inputs = data';
targets = tasks;

%Convert target array from number to pattern (input columns = output
%columns)
columns = size(inputs,1);
for i = 1:size(targets,1)
    targets(i,1:columns) = de2bi(targets(i,1),columns);
end
targets = targets';
size(data)
size(targets)
% Create a Pattern Recognition Network
hiddenLayerSize = 10;
net = patternnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;


% Train the Network
[net,tr] = train(net,inputs,targets,'useParallel','yes');

% Test the Network
outputs = net(inputs,'useParallel','yes');
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs)

% View the Network
view(net)

% Plots
% Uncomment these lines to enable various plots.
% figure, plotperform(tr)
  figure, plottrainstate(tr)
% figure, plotconfusion(targets,outputs)
  figure, plotroc(targets,outputs)
% figure, ploterrhist(errors)

matlabpool CLOSE
